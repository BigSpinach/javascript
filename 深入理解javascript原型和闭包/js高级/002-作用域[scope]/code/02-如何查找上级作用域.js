/*
	函数执行形成一个私有的作用域(A)，A的上级作用域是谁，和他在哪执行的没关系，主要看他是在哪定义的，
	在哪个作用域下定义的，当前A的上级作用域就是谁；
*/
{
	var n = 10;

	function box() {
		//变脸提升发现没有私有变量n,那么使用上级的n(上级是window)，即n是在window下定义的，所以this=>window
		console.log(n);
	//	console.log(this);//window

	}
	box();

}
//匿名函数自执行
{
	~function (){
		var n=250;
		box();
	}();
	
	/*
		匿名函数中变量提升
		发现私有变量n ,但是没有 box()函数
			那么他就会去找box()函数所定义的作用域-----发现是在全局定义的
			所以它就会将box()函数所在的上下文环境设置为激活状态，so--再看box()函数
				发现使用一个n变量，所以就取box上下文环境下的n的值了，
	*/
	
}
